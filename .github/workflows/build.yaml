name: Test CRC CI
on:
  push:
    branches:
      - main

jobs:
  crc-create:
    runs-on: ubuntu-latest
    steps:
    - name: Install oc
      uses: redhat-actions/oc-installer@v1
      with:
        oc_version: '4.11.9'
    - name: Create Workdir
      run: mkdir workdir
    - name: Pull CRC
      run: docker pull quay.io/crcont/crc-cloud:latest
    - name: Run CRC
      env:
        PULL_SECRET: ${{ secrets.PULL_SECRET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        docker run -v $(pwd)/workdir:/workdir \
        -e WORKING_MODE=C \
        -e PULL_SECRET="$PULL_SECRET" \
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        -e AWS_DEFAULT_REGION=us-west-2 \
        -e CREATE_RUN_ID=crc \
        quay.io/crcont/crc-cloud
    - name: Get OpenShift instance address
      uses: sergeysova/jq-action@v2
      id: cluster_address
      with:
        cmd: jq -r '.api.address' $(pwd)/workdir/crc/cluster_infos.json

    - name: oc login & get namespaces
      run: |
        oc login -u kubeadmin -p kubeadmin ${{ steps.keywords.outputs.value }}:644 && \
        oc get namespaces 
    - name: Teardown
      env: 
        PULL_SECRET: ${{ secrets.PULL_SECRET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        docker run -v "$(pwd)/workdir:/workdir" \
        -e WORKING_MODE=T \
        -e TEARDOWN_RUN_ID=crc \
        -e AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
        -e AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
        -e AWS_DEFAULT_REGION=us-west-2 \
        quay.io/crcont/crc-cloud

    

    



