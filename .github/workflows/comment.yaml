on: issue_comment

jobs:
  pr_commented:
    # This job only runs for pull request comments
    name: PR comment
    if: contains(github.event.comment.body, '/ocp-test') && contains(github.event.comment.html_url, '/pull/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install OC CLI
      uses: redhat-actions/oc-installer@v1
      with:
        oc_version: latest
    - uses: actions/checkout@v2
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: tsebastiani/krkn
    - name: Coverage Badge
      uses: tj-actions/coverage-badge-py@v1.8
    - name: oc login
      run: oc login --insecure-skip-tls-verify -u kubeadmin -p kubeadmin https://api.34.211.114.208.nip.io:6443
    - name: ls
      run: ls -al
    - name: Setup kraken dependencies
      run:  pip install -r requirements.txt
    - name: mock set env
      run: |
        echo "DEPLOYMENT_NAME=test-nginx" >> $GITHUB_ENV
        echo "NODE_NAME=crc-lgph7-master-0" >> $GITHUB_ENV
        echo "NAMESPACE=test-namespace" >> $GITHUB_ENV
        echo "COVERAGE_FILE_MD=`pwd`/tullio.md" >> $GITHUB_ENV
    - name: Setup test suite
      run: |
        yq -i '.kraken.port="8081"' CI/config/common_test_config.yaml
        yq -i '.kraken.signal_address="0.0.0.0"' CI/config/common_test_config.yaml
        yq '.[0].config.label_selector ="app=${{env.DEPLOYMENT_NAME}}"' -i CI/scenarios/hello_pod_killing.yml
        yq '.[0].config.namespace_pattern ="^${{env.NAMESPACE}}$"' -i CI/scenarios/hello_pod_killing.yml

        echo "test_app_outages_gh"  > ./CI/tests/my_tests
        #echo "test_container"      >> ./CI/tests/my_tests
        #echo "test_cpu_hog_gh"     >> ./CI/tests/my_tests
        #echo "test_io_hog_gh"      >> ./CI/tests/my_tests
        #echo "test_mem_hog_gh"     >> ./CI/tests/my_tests
        #echo "test_namespace"      >> ./CI/tests/my_tests
        #echo "test_net_chaos"      >> ./CI/tests/my_tests
        #echo "test_time"           >> ./CI/tests/my_tests
        ##echo "test_nodes"          >> ./CI/tests/my_tests
        ##echo "test_pods"           >> ./CI/tests/my_tests <--- disabled
    - name: Running test suite
      run: |
        ./CI/run.sh
    - name: Create coverage file
      run: |
        python -m coverage report --format=markdown > ${{env.COVERAGE_FILE_MD}}
        cat ${{env.COVERAGE_FILE_MD}} > $GITHUB_STEP_SUMMARY
